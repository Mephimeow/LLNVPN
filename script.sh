#!/bin/bash
set -euo pipefail

#Globals
NS_LIST=()       # —Å–ø–∏—Å–æ–∫ namespace
WRAPPERS=()      # —Å–ø–∏—Å–æ–∫ –æ–±—ë—Ä—Ç–æ—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
CLEANED_UP=false


cleanup() {
  if [ "$CLEANED_UP" = true ]; then
    return
  fi
  CLEANED_UP=true

  echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
  for ns in "${NS_LIST[@]}"; do
    ip netns del "$ns" 2>/dev/null || true
  done

  for wrapper in "${WRAPPERS[@]}"; do
    rm -f "$wrapper"
  done

  echo "‚úÖ –í—Å—ë –æ—á–∏—â–µ–Ω–æ"
}

cleanup_and_exit() {
  cleanup
  exit 0
}

trap cleanup_and_exit INT TERM
trap cleanup EXIT


WAN_IF=$(ip route | grep '^default' | awk '{print $5}' | head -n1)
if [[ -z "$WAN_IF" ]]; then
  echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω WAN –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å"
  exit 1
fi
echo "üåê WAN-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: $WAN_IF"

BASE_SUBNET="10.200.0.0/16"
echo "üì° –ë–∞–∑–æ–≤–∞—è –ø–æ–¥—Å–µ—Ç—å: $BASE_SUBNET"

# –í–∫–ª—é—á–∞–µ–º IP forward
if [[ "$(cat /proc/sys/net/ipv4/ip_forward)" -ne 1 ]]; then
  echo 1 | sudo tee /proc/sys/net/ipv4/ip_forward >/dev/null
  echo "‚ö° IP Forward –≤–∫–ª—é—á–µ–Ω"
fi


create_namespace() {
  local id="$1"
  local ns="vpn$id"
  local veth_host="veth_${ns}_host"
  local veth_ns="veth_${ns}_ns"
  local subnet="10.200.$id.0/24"
  local ip_host="10.200.$id.1/24"
  local ip_ns="10.200.$id.2/24"

  echo "‚ûï –°–æ–∑–¥–∞—é $ns"

  ip netns add "$ns"
  ip link add "$veth_host" type veth peer name "$veth_ns"
  ip link set "$veth_ns" netns "$ns"

  ip addr add "$ip_host" dev "$veth_host"
  ip link set "$veth_host" up

  ip netns exec "$ns" ip addr add "$ip_ns" dev "$veth_ns"
  ip netns exec "$ns" ip link set lo up
  ip netns exec "$ns" ip link set "$veth_ns" up
  ip netns exec "$ns" ip route add default via 10.200.$id.1

  iptables -t nat -A POSTROUTING -s 10.200.$id.0/24 -o "$WAN_IF" -j MASQUERADE

  # –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  local wrapper_user="/usr/local/bin/$ns"
  cat > "$wrapper_user" <<EOF
#!/bin/bash
exec sudo -u "$USER" /sbin/ip netns exec $ns "\$@"
EOF
  chmod +x "$wrapper_user"

  # –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è root
  local wrapper_root="/usr/local/bin/${ns}-root"
  cat > "$wrapper_root" <<EOF
#!/bin/bash
exec sudo /sbin/ip netns exec $ns "\$@"
EOF
  chmod +x "$wrapper_root"

  NS_LIST+=("$ns")
  WRAPPERS+=("$wrapper_user" "$wrapper_root")

  echo "‚úÖ Namespace $ns –≥–æ—Ç–æ–≤."
  echo "   –ò—Å–ø–æ–ª—å–∑—É–π: $ns <–∫–æ–º–∞–Ω–¥–∞> (–æ—Ç —é–∑–µ—Ä–∞)"
  echo "           –∏–ª–∏: ${ns}-root <–∫–æ–º–∞–Ω–¥–∞> (–æ—Ç root)"
  echo "   ‚ö†Ô∏è –£–±–µ–¥–∏—Å—å, —á—Ç–æ –≤ sudoers –µ—Å—Ç—å –ø—Ä–∞–≤–∏–ª–æ:"
  echo "     $USER ALL=(ALL:ALL) NOPASSWD: /sbin/ip netns exec *"
}

list_namespaces() {
  echo "üåê –¢–µ–∫—É—â–∏–µ VPN namespace:"
  for ns in "${NS_LIST[@]}"; do
    echo " - $ns (/usr/local/bin/$ns, /usr/local/bin/${ns}-root)"
  done
}

status_namespaces() {
  for ns in "${NS_LIST[@]}"; do
    echo "üîé [$ns]"
    if command -v "$ns" &>/dev/null; then
      echo -n "  IP: "
      "$ns" curl -s --max-time 5 ifconfig.me || echo "–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞"

      echo -n "  Default route: "
      if ! "$ns" ip route show default 2>/dev/null | awk '{print $3; exit}'; then
        echo "–Ω–µ—Ç –º–∞—Ä—à—Ä—É—Ç–∞"
      fi
    else
      echo "  –æ–±—ë—Ä—Ç–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    fi
  done
}

print_help() {
  echo -e "üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
  <—á–∏—Å–ª–æ>   ‚Äî —Å–æ–∑–¥–∞—Ç—å VPN namespace (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1 ‚Üí vpn1 –∏ vpn1-root)
  list      ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Å–æ–∑–¥–∞–Ω–Ω—ã–µ VPN
  status    ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å IP –∏ –º–∞—Ä—à—Ä—É—Ç VPN
  quit|exit ‚Äî –≤—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞
  help      ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
}


print_help


while true; do
  read -rp "–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É (help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏): " cmd
  case "$cmd" in
    [0-9]*) create_namespace "$cmd" ;;
    list)   list_namespaces ;;
    status) status_namespaces ;;
    help)   print_help ;;
    quit|exit) break ;;
    *) echo "‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ (—Å–º. help)" ;;
  esac
done
